"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./devicePool"), exports);
__exportStar(require("./instanceProfile"), exports);
__exportStar(require("./networkProfile"), exports);
__exportStar(require("./project"), exports);
__exportStar(require("./testGridProject"), exports);
__exportStar(require("./upload"), exports);
// Import resources to register:
const devicePool_1 = require("./devicePool");
const instanceProfile_1 = require("./instanceProfile");
const networkProfile_1 = require("./networkProfile");
const project_1 = require("./project");
const testGridProject_1 = require("./testGridProject");
const upload_1 = require("./upload");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:devicefarm/devicePool:DevicePool":
                return new devicePool_1.DevicePool(name, undefined, { urn });
            case "aws:devicefarm/instanceProfile:InstanceProfile":
                return new instanceProfile_1.InstanceProfile(name, undefined, { urn });
            case "aws:devicefarm/networkProfile:NetworkProfile":
                return new networkProfile_1.NetworkProfile(name, undefined, { urn });
            case "aws:devicefarm/project:Project":
                return new project_1.Project(name, undefined, { urn });
            case "aws:devicefarm/testGridProject:TestGridProject":
                return new testGridProject_1.TestGridProject(name, undefined, { urn });
            case "aws:devicefarm/upload:Upload":
                return new upload_1.Upload(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "devicefarm/devicePool", _module);
pulumi.runtime.registerResourceModule("aws", "devicefarm/instanceProfile", _module);
pulumi.runtime.registerResourceModule("aws", "devicefarm/networkProfile", _module);
pulumi.runtime.registerResourceModule("aws", "devicefarm/project", _module);
pulumi.runtime.registerResourceModule("aws", "devicefarm/testGridProject", _module);
pulumi.runtime.registerResourceModule("aws", "devicefarm/upload", _module);
//# sourceMappingURL=index.js.map