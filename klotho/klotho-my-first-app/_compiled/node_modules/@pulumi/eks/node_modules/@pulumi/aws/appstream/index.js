"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./directoryConfig"), exports);
__exportStar(require("./fleet"), exports);
__exportStar(require("./fleetStackAssociation"), exports);
__exportStar(require("./imageBuilder"), exports);
__exportStar(require("./stack"), exports);
__exportStar(require("./user"), exports);
__exportStar(require("./userStackAssociation"), exports);
// Import resources to register:
const directoryConfig_1 = require("./directoryConfig");
const fleet_1 = require("./fleet");
const fleetStackAssociation_1 = require("./fleetStackAssociation");
const imageBuilder_1 = require("./imageBuilder");
const stack_1 = require("./stack");
const user_1 = require("./user");
const userStackAssociation_1 = require("./userStackAssociation");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:appstream/directoryConfig:DirectoryConfig":
                return new directoryConfig_1.DirectoryConfig(name, undefined, { urn });
            case "aws:appstream/fleet:Fleet":
                return new fleet_1.Fleet(name, undefined, { urn });
            case "aws:appstream/fleetStackAssociation:FleetStackAssociation":
                return new fleetStackAssociation_1.FleetStackAssociation(name, undefined, { urn });
            case "aws:appstream/imageBuilder:ImageBuilder":
                return new imageBuilder_1.ImageBuilder(name, undefined, { urn });
            case "aws:appstream/stack:Stack":
                return new stack_1.Stack(name, undefined, { urn });
            case "aws:appstream/user:User":
                return new user_1.User(name, undefined, { urn });
            case "aws:appstream/userStackAssociation:UserStackAssociation":
                return new userStackAssociation_1.UserStackAssociation(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "appstream/directoryConfig", _module);
pulumi.runtime.registerResourceModule("aws", "appstream/fleet", _module);
pulumi.runtime.registerResourceModule("aws", "appstream/fleetStackAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "appstream/imageBuilder", _module);
pulumi.runtime.registerResourceModule("aws", "appstream/stack", _module);
pulumi.runtime.registerResourceModule("aws", "appstream/user", _module);
pulumi.runtime.registerResourceModule("aws", "appstream/userStackAssociation", _module);
//# sourceMappingURL=index.js.map