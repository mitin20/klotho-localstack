"use strict";
// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.IPAddressPatch = exports.IPAddressList = exports.IPAddress = exports.ClusterCIDRPatch = exports.ClusterCIDRList = exports.ClusterCIDR = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.ClusterCIDR = null;
utilities.lazyLoad(exports, ["ClusterCIDR"], () => require("./clusterCIDR"));
exports.ClusterCIDRList = null;
utilities.lazyLoad(exports, ["ClusterCIDRList"], () => require("./clusterCIDRList"));
exports.ClusterCIDRPatch = null;
utilities.lazyLoad(exports, ["ClusterCIDRPatch"], () => require("./clusterCIDRPatch"));
exports.IPAddress = null;
utilities.lazyLoad(exports, ["IPAddress"], () => require("./ipaddress"));
exports.IPAddressList = null;
utilities.lazyLoad(exports, ["IPAddressList"], () => require("./ipaddressList"));
exports.IPAddressPatch = null;
utilities.lazyLoad(exports, ["IPAddressPatch"], () => require("./ipaddressPatch"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:networking.k8s.io/v1alpha1:ClusterCIDR":
                return new exports.ClusterCIDR(name, undefined, { urn });
            case "kubernetes:networking.k8s.io/v1alpha1:ClusterCIDRList":
                return new exports.ClusterCIDRList(name, undefined, { urn });
            case "kubernetes:networking.k8s.io/v1alpha1:ClusterCIDRPatch":
                return new exports.ClusterCIDRPatch(name, undefined, { urn });
            case "kubernetes:networking.k8s.io/v1alpha1:IPAddress":
                return new exports.IPAddress(name, undefined, { urn });
            case "kubernetes:networking.k8s.io/v1alpha1:IPAddressList":
                return new exports.IPAddressList(name, undefined, { urn });
            case "kubernetes:networking.k8s.io/v1alpha1:IPAddressPatch":
                return new exports.IPAddressPatch(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "networking.k8s.io/v1alpha1", _module);
//# sourceMappingURL=index.js.map