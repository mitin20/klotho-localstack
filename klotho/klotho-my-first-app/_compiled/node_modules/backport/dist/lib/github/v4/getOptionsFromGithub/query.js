"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.query = void 0;
const graphql_tag_1 = __importDefault(require("graphql-tag"));
const remoteConfig_1 = require("../../../remoteConfig");
exports.query = (0, graphql_tag_1.default) `
  query GithubConfigOptions($repoOwner: String!, $repoName: String!) {
    viewer {
      login
    }
    repository(owner: $repoOwner, name: $repoName) {
      # check to see if a branch named "backport" exists
      illegalBackportBranch: ref(qualifiedName: "refs/heads/backport") {
        id
      }
      isPrivate
      defaultBranchRef {
        name
        target {
          ...RemoteConfigHistoryFragment
        }
      }
    }
  }

  ${remoteConfig_1.RemoteConfigHistoryFragment}
`;
