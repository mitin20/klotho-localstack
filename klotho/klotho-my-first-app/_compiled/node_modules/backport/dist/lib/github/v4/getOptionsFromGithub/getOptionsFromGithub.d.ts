export declare type OptionsFromGithub = Awaited<ReturnType<typeof getOptionsFromGithub>>;
export declare function getOptionsFromGithub(options: {
    accessToken: string;
    cwd?: string;
    githubApiBaseUrlV4?: string;
    repoName: string;
    repoOwner: string;
    skipRemoteConfig?: boolean;
    globalConfigFile?: string;
}): Promise<{
    accessToken?: string | undefined;
    assignees?: string[] | undefined;
    author?: string | null | undefined;
    autoAssign?: boolean | undefined;
    autoFixConflicts?: (({ files, directory, logger, targetBranch, }: {
        files: string[];
        directory: string;
        logger: import("winston").Logger;
        targetBranch: string;
    }) => boolean | Promise<boolean>) | undefined;
    autoMerge?: boolean | undefined;
    autoMergeMethod?: string | undefined;
    backportBinary?: string | undefined;
    cherrypickRef?: boolean | undefined;
    commitPaths?: string[] | undefined;
    details?: boolean | undefined;
    dir?: string | undefined;
    dryRun?: boolean | undefined;
    editor?: string | undefined;
    fork?: boolean | undefined;
    gitAuthorEmail?: string | undefined;
    gitAuthorName?: string | undefined;
    gitHostname?: string | undefined;
    githubApiBaseUrlV3?: string | undefined;
    githubApiBaseUrlV4?: string | undefined;
    interactive?: boolean | undefined;
    logFilePath?: string | undefined;
    ls?: boolean | undefined;
    maxNumber?: number | undefined;
    multiple?: boolean | undefined;
    multipleBranches?: boolean | undefined;
    multipleCommits?: boolean | undefined;
    noVerify?: boolean | undefined;
    prDescription?: string | undefined;
    prFilter?: string | undefined;
    projectConfigFile?: string | undefined;
    prTitle?: string | undefined;
    publishStatusCommentOnAbort?: boolean | undefined;
    publishStatusCommentOnFailure?: boolean | undefined;
    publishStatusCommentOnSuccess?: boolean | undefined;
    pullNumber?: number | number[] | undefined;
    repoForkOwner?: string | undefined;
    repoName?: string | undefined;
    repoOwner?: string | undefined;
    resetAuthor?: boolean | undefined;
    reviewers?: string[] | undefined;
    sha?: string | string[] | undefined;
    skipRemoteConfig?: boolean | undefined;
    sourceBranch: string;
    sourcePRLabels?: string[] | undefined;
    targetBranchChoices?: import("../../../../options/ConfigOptions").TargetBranchChoiceOrString[] | undefined;
    targetBranches?: string[] | undefined;
    targetPRLabels?: string[] | undefined;
    signoff?: boolean | undefined;
    help?: boolean | undefined;
    version?: boolean | undefined;
    v?: boolean | undefined;
    branchLabelMapping?: Record<string, string> | undefined;
    upstream?: string | undefined;
    branches?: import("../../../../options/ConfigOptions").TargetBranchChoiceOrString[] | undefined;
    labels?: string[] | undefined;
    authenticatedUsername: string;
    isRepoPrivate: boolean;
}>;
