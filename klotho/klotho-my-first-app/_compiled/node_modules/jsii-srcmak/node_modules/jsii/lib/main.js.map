{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":";;AAAA,gCAA8B;AAE9B,kCAAkC;AAClC,kCAAkC;AAClC,iCAAiC;AACjC,0DAA+D;AAC/D,+BAA+B;AAE/B,yCAAsC;AACtC,uDAAwD;AACxD,iDAAiD;AACjD,uCAAyD;AACzD,iCAAiC;AACjC,uCAAoC;AACpC,yCAA6C;AAE7C,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,0BAAe,CAAC,CAAC;AAElD,CAAC,KAAK,IAAI,EAAE;IACV,MAAM,IAAA,sCAA4B,GAAE,CAAC;IAErC,MAAM,KAAK;SACR,GAAG,CAAC,MAAM,CAAC;SACX,OAAO,CACN,CAAC,mBAAmB,EAAE,wBAAwB,CAAC,EAC/C,oCAAoC,EACpC,CAAC,IAAI,EAAE,EAAE,CACP,IAAI;SACD,UAAU,CAAC,cAAc,EAAE;QAC1B,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,wCAAwC;QAC9C,OAAO,EAAE,GAAG;QACZ,SAAS,EAAE,IAAI;KAChB,CAAC;SACD,MAAM,CAAC,OAAO,EAAE;QACf,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,oDAAoD;KAC3D,CAAC;SACD,MAAM,CAAC,oBAAoB,EAAE;QAC5B,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,qFAAqF;KAC5F,CAAC;SACD,MAAM,CAAC,uBAAuB,EAAE;QAC/B,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,IAAI;QACb,IAAI,EAAE,uCAAuC;QAC7C,MAAM,EAAE,IAAI;KACb,CAAC;SACD,OAAO,CAAC,kBAAkB,EAAE;QAC3B,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,0BAA0B;KACjC,CAAC;SACD,MAAM,CAAC,kBAAkB,EAAE;QAC1B,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,EAAE;QACX,IAAI,EAAE,0CAA0C,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG;KAC1E,CAAC;SACD,MAAM,CAAC,kBAAkB,EAAE;QAC1B,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,wKAAwK;KAC/K,CAAC;SACD,MAAM,CAAC,0BAA0B,EAAE;QAClC,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,KAAK;QACd,IAAI,EAAE,iGAAiG;KACxG,CAAC;SACD,MAAM,CAAC,mBAAmB,EAAE;QAC3B,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,eAAe;QACxB,IAAI,EAAE,8EAA8E;KACrF,CAAC;SACD,MAAM,CAAC,mBAAmB,EAAE;QAC3B,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,KAAK;QACd,IAAI,EAAE,2CAA2C;KAClD,CAAC;SACD,MAAM,CAAC,SAAS,EAAE;QACjB,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,kCAAkC;QACxC,MAAM,EAAE,IAAI;KACb,CAAC,EACN,KAAK,EAAE,IAAI,EAAE,EAAE;QACb,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE/B,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QAEnF,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,sBAAsB,EAAE,GAAG,IAAA,8BAAe,EAAC,WAAW,CAAC,CAAC;QAE1F,gCAAgC;QAChC,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,kBAAkB,CAAC,EAAE;YAC1C,IAAI,CAAC,CAAC,GAAG,IAAI,0BAAe,CAAC,EAAE;gBAC7B,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAU,qBAAqB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACnG;YAED,0BAAe,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SAC9B;QAED,IAAA,qCAAmB,EAAC,WAAW,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;QAEnD,MAAM,QAAQ,GAAG,IAAI,mBAAQ,CAAC;YAC5B,WAAW;YACX,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,CAAC;YAC7C,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC;YACxC,eAAe,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,IAAI;YACjD,4BAA4B,EAAE,IAAI,CAAC,kBAAkB,CAAC;YACtD,sBAAsB,EAAE,IAAI,CAAC,0BAA0B,CAAC;YACxD,wBAAwB,EAAE,IAAI,CAAC,mBAAmB,CAAC;YACnD,gBAAgB,EAAE,IAAI,CAAC,mBAAmB,CAAC;SAC5C,CAAC,CAAC;QAEH,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAEzE,MAAM,cAAc,GAAG,CAAC,GAAG,sBAAsB,EAAE,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;QAE9E,KAAK,MAAM,UAAU,IAAI,cAAc,EAAE;YACvC,KAAK,CAAC,aAAa,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;SAC9C;QACD,IAAI,UAAU,CAAC,WAAW,EAAE;YAC1B,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;SACtB;IACH,CAAC,CACF;SACA,IAAI,EAAE;SACN,OAAO,CAAC,GAAG,iBAAO,gBAAgB,sBAAS,EAAE,CAAC;SAC9C,KAAK,EAAE,CAAC;AACb,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;IACf,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACnC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC;AAEH,SAAS,gBAAgB,CAAC,SAAiB;IACzC,MAAM,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;IAC3C,MAAM,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;IAE3C,MAAM,CAAC,SAAS,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAC1C,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,SAAS,CAAC;QACf,SAAS,EAAE;YACT,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE;aACpD;YACD,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;gBACnB,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE;oBACN,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAE,oBAA4B;iBACzE;aACF;SACF;QACD,UAAU,EAAE;YACV,OAAO,EAAE,EAAE,SAAS,EAAE,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE;YACvD,qGAAqG;YACrG,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;gBACnB,SAAS,EAAE,CAAC,aAAa,CAAC;gBAC1B,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;aACzC;SACF;KACF,CAAC,CAAC;IAEH,SAAS,SAAS,CAAC,cAAc,GAAG,SAAS;QAC3C,QAAQ,cAAc,EAAE;YACtB,KAAK,CAAC;gBACJ,OAAO,MAAM,CAAC;YAChB,KAAK,CAAC;gBACJ,OAAO,MAAM,CAAC;YAChB,KAAK,CAAC;gBACJ,OAAO,OAAO,CAAC;YACjB,KAAK,CAAC;gBACJ,OAAO,OAAO,CAAC;YACjB;gBACE,OAAO,KAAK,CAAC;SAChB;IACH,CAAC;AACH,CAAC","sourcesContent":["import '@jsii/check-node/run';\n\nimport * as path from 'node:path';\nimport * as util from 'node:util';\nimport * as log4js from 'log4js';\nimport { version as tsVersion } from 'typescript/package.json';\nimport * as yargs from 'yargs';\n\nimport { Compiler } from './compiler';\nimport { configureCategories } from './jsii-diagnostic';\nimport { loadProjectInfo } from './project-info';\nimport { emitSupportPolicyInformation } from './support';\nimport * as utils from './utils';\nimport { VERSION } from './version';\nimport { enabledWarnings } from './warnings';\n\nconst warningTypes = Object.keys(enabledWarnings);\n\n(async () => {\n  await emitSupportPolicyInformation();\n\n  await yargs\n    .env('JSII')\n    .command(\n      ['$0 [PROJECT_ROOT]', 'compile [PROJECT_ROOT]'],\n      'Compiles a jsii/TypeScript project',\n      (argv) =>\n        argv\n          .positional('PROJECT_ROOT', {\n            type: 'string',\n            desc: 'The root of the project to be compiled',\n            default: '.',\n            normalize: true,\n          })\n          .option('watch', {\n            alias: 'w',\n            type: 'boolean',\n            desc: 'Watch for file changes and recompile automatically',\n          })\n          .option('project-references', {\n            alias: 'r',\n            type: 'boolean',\n            desc: 'Generate TypeScript project references (also [package.json].jsii.projectReferences)',\n          })\n          .option('fix-peer-dependencies', {\n            type: 'boolean',\n            default: true,\n            desc: 'This option no longer has any effect.',\n            hidden: true,\n          })\n          .options('fail-on-warnings', {\n            alias: 'Werr',\n            type: 'boolean',\n            desc: 'Treat warnings as errors',\n          })\n          .option('silence-warnings', {\n            type: 'array',\n            default: [],\n            desc: `List of warnings to silence (warnings: ${warningTypes.join(',')})`,\n          })\n          .option('strip-deprecated', {\n            type: 'string',\n            desc: '[EXPERIMENTAL] Hides all @deprecated members from the API (implementations remain). If an optional file name is given, only FQNs present in the file will be stripped.',\n          })\n          .option('add-deprecation-warnings', {\n            type: 'boolean',\n            default: false,\n            desc: '[EXPERIMENTAL] Injects warning statements for all deprecated elements, to be printed at runtime',\n          })\n          .option('generate-tsconfig', {\n            type: 'string',\n            default: 'tsconfig.json',\n            desc: 'Name of the typescript configuration file to generate with compiler settings',\n          })\n          .option('compress-assembly', {\n            type: 'boolean',\n            default: false,\n            desc: 'Emit a compressed version of the assembly',\n          })\n          .option('verbose', {\n            alias: 'v',\n            type: 'count',\n            desc: 'Increase the verbosity of output',\n            global: true,\n          }),\n      async (argv) => {\n        _configureLog4js(argv.verbose);\n\n        const projectRoot = path.normalize(path.resolve(process.cwd(), argv.PROJECT_ROOT));\n\n        const { projectInfo, diagnostics: projectInfoDiagnostics } = loadProjectInfo(projectRoot);\n\n        // disable all silenced warnings\n        for (const key of argv['silence-warnings']) {\n          if (!(key in enabledWarnings)) {\n            throw new Error(`Unknown warning type ${key as any}. Must be one of: ${warningTypes.join(', ')}`);\n          }\n\n          enabledWarnings[key] = false;\n        }\n\n        configureCategories(projectInfo.diagnostics ?? {});\n\n        const compiler = new Compiler({\n          projectInfo,\n          projectReferences: argv['project-references'],\n          failOnWarnings: argv['fail-on-warnings'],\n          stripDeprecated: argv['strip-deprecated'] != null,\n          stripDeprecatedAllowListFile: argv['strip-deprecated'],\n          addDeprecationWarnings: argv['add-deprecation-warnings'],\n          generateTypeScriptConfig: argv['generate-tsconfig'],\n          compressAssembly: argv['compress-assembly'],\n        });\n\n        const emitResult = argv.watch ? await compiler.watch() : compiler.emit();\n\n        const allDiagnostics = [...projectInfoDiagnostics, ...emitResult.diagnostics];\n\n        for (const diagnostic of allDiagnostics) {\n          utils.logDiagnostic(diagnostic, projectRoot);\n        }\n        if (emitResult.emitSkipped) {\n          process.exitCode = 1;\n        }\n      },\n    )\n    .help()\n    .version(`${VERSION}, typescript ${tsVersion}`)\n    .parse();\n})().catch((e) => {\n  console.error(`Error: ${e.stack}`);\n  process.exitCode = -1;\n});\n\nfunction _configureLog4js(verbosity: number) {\n  const stderrColor = !!process.stderr.isTTY;\n  const stdoutColor = !!process.stdout.isTTY;\n\n  log4js.addLayout('passThroughNoColor', () => {\n    return (loggingEvent) => utils.stripAnsi(util.format(...loggingEvent.data));\n  });\n\n  log4js.configure({\n    appenders: {\n      console: {\n        type: 'stderr',\n        layout: { type: stderrColor ? 'colored' : 'basic' },\n      },\n      [utils.DIAGNOSTICS]: {\n        type: 'stdout',\n        layout: {\n          type: stdoutColor ? 'messagePassThrough' : ('passThroughNoColor' as any),\n        },\n      },\n    },\n    categories: {\n      default: { appenders: ['console'], level: _logLevel() },\n      // The diagnostics logger must be set to INFO or more verbose, or watch won't show important messages\n      [utils.DIAGNOSTICS]: {\n        appenders: ['diagnostics'],\n        level: _logLevel(Math.max(verbosity, 1)),\n      },\n    },\n  });\n\n  function _logLevel(verbosityLevel = verbosity): keyof log4js.Levels {\n    switch (verbosityLevel) {\n      case 0:\n        return 'WARN';\n      case 1:\n        return 'INFO';\n      case 2:\n        return 'DEBUG';\n      case 3:\n        return 'TRACE';\n      default:\n        return 'ALL';\n    }\n  }\n}\n"]}