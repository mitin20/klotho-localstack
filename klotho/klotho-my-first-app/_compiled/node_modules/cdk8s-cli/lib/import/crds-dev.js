"use strict";
/**
 *
 *              github:crossplane/crossplane@0.14.0
 *              |--^- |  ^         ^         ^ ^  ^
 *                 |     |         |         | |  |
 *  - provider ----+     |         |         | |  |
 *  - account -----------+         |         | |  |
 *  - repo ------------------------+         | |  |
 *  - major ---------------------------------+ |  |
 *  - minor -----------------------------------+  |
 *  - patch --------------------------------------+
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.matchCrdsDevUrl = void 0;
/**
 * Matches a https://doc.crds.dev repo
 *
 *  - url if found
 *  - undefined if not
 *
 * @param source
 */
function matchCrdsDevUrl(source) {
    var _a;
    const match = /^github:([A-Za-z0-9_.-]+)\/([A-Za-z0-9_.-]+)(?:\@([0-9]+)\.([0-9]+)(?:\.([0-9]+))?)?$/.exec(source);
    if (match) {
        const account = match[1];
        const repo = match[2];
        const major = match[3];
        //default to master if no version specified
        //TODO: get latest released version from available versions
        let url = `https://doc.crds.dev/raw/github.com/${account}/${repo}`;
        if (major) {
            const minor = match[4];
            const patch = (_a = match[5]) !== null && _a !== void 0 ? _a : '0';
            url = `https://doc.crds.dev/raw/github.com/${account}/${repo}@v${major}.${minor}.${patch}`;
        }
        return url;
    }
    return undefined;
}
exports.matchCrdsDevUrl = matchCrdsDevUrl;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3Jkcy1kZXYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW1wb3J0L2NyZHMtZGV2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7R0FXRzs7O0FBRUg7Ozs7Ozs7R0FPRztBQUNILFNBQWdCLGVBQWUsQ0FBQyxNQUFjOztJQUM1QyxNQUFNLEtBQUssR0FBRyx1RkFBdUYsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbkgsSUFBSSxLQUFLLEVBQUU7UUFDVCxNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDekIsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RCLE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUV2QiwyQ0FBMkM7UUFDM0MsMkRBQTJEO1FBQzNELElBQUksR0FBRyxHQUFHLHVDQUF1QyxPQUFPLElBQUksSUFBSSxFQUFFLENBQUM7UUFDbkUsSUFBSSxLQUFLLEVBQUU7WUFDVCxNQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkIsTUFBTSxLQUFLLEdBQUcsTUFBQSxLQUFLLENBQUMsQ0FBQyxDQUFDLG1DQUFJLEdBQUcsQ0FBQztZQUU5QixHQUFHLEdBQUcsdUNBQXVDLE9BQU8sSUFBSSxJQUFJLEtBQUssS0FBSyxJQUFJLEtBQUssSUFBSSxLQUFLLEVBQUUsQ0FBQztTQUM1RjtRQUVELE9BQU8sR0FBRyxDQUFDO0tBQ1o7SUFFRCxPQUFPLFNBQVMsQ0FBQztBQUNuQixDQUFDO0FBckJELDBDQXFCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqICAgICAgICAgICAgICBnaXRodWI6Y3Jvc3NwbGFuZS9jcm9zc3BsYW5lQDAuMTQuMFxuICogICAgICAgICAgICAgIHwtLV4tIHwgIF4gICAgICAgICBeICAgICAgICAgXiBeICBeXG4gKiAgICAgICAgICAgICAgICAgfCAgICAgfCAgICAgICAgIHwgICAgICAgICB8IHwgIHxcbiAqICAtIHByb3ZpZGVyIC0tLS0rICAgICB8ICAgICAgICAgfCAgICAgICAgIHwgfCAgfFxuICogIC0gYWNjb3VudCAtLS0tLS0tLS0tLSsgICAgICAgICB8ICAgICAgICAgfCB8ICB8XG4gKiAgLSByZXBvIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgICAgICAgICB8IHwgIHxcbiAqICAtIG1ham9yIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfCAgfFxuICogIC0gbWlub3IgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rICB8XG4gKiAgLSBwYXRjaCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcbiAqL1xuXG4vKipcbiAqIE1hdGNoZXMgYSBodHRwczovL2RvYy5jcmRzLmRldiByZXBvXG4gKlxuICogIC0gdXJsIGlmIGZvdW5kXG4gKiAgLSB1bmRlZmluZWQgaWYgbm90XG4gKlxuICogQHBhcmFtIHNvdXJjZVxuICovXG5leHBvcnQgZnVuY3Rpb24gbWF0Y2hDcmRzRGV2VXJsKHNvdXJjZTogc3RyaW5nKTogKHVuZGVmaW5lZCB8IHN0cmluZykge1xuICBjb25zdCBtYXRjaCA9IC9eZ2l0aHViOihbQS1aYS16MC05Xy4tXSspXFwvKFtBLVphLXowLTlfLi1dKykoPzpcXEAoWzAtOV0rKVxcLihbMC05XSspKD86XFwuKFswLTldKykpPyk/JC8uZXhlYyhzb3VyY2UpO1xuICBpZiAobWF0Y2gpIHtcbiAgICBjb25zdCBhY2NvdW50ID0gbWF0Y2hbMV07XG4gICAgY29uc3QgcmVwbyA9IG1hdGNoWzJdO1xuICAgIGNvbnN0IG1ham9yID0gbWF0Y2hbM107XG5cbiAgICAvL2RlZmF1bHQgdG8gbWFzdGVyIGlmIG5vIHZlcnNpb24gc3BlY2lmaWVkXG4gICAgLy9UT0RPOiBnZXQgbGF0ZXN0IHJlbGVhc2VkIHZlcnNpb24gZnJvbSBhdmFpbGFibGUgdmVyc2lvbnNcbiAgICBsZXQgdXJsID0gYGh0dHBzOi8vZG9jLmNyZHMuZGV2L3Jhdy9naXRodWIuY29tLyR7YWNjb3VudH0vJHtyZXBvfWA7XG4gICAgaWYgKG1ham9yKSB7XG4gICAgICBjb25zdCBtaW5vciA9IG1hdGNoWzRdO1xuICAgICAgY29uc3QgcGF0Y2ggPSBtYXRjaFs1XSA/PyAnMCc7XG5cbiAgICAgIHVybCA9IGBodHRwczovL2RvYy5jcmRzLmRldi9yYXcvZ2l0aHViLmNvbS8ke2FjY291bnR9LyR7cmVwb31AdiR7bWFqb3J9LiR7bWlub3J9LiR7cGF0Y2h9YDtcbiAgICB9XG5cbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbiJdfQ==