{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'node:fs';\nimport * as path from 'node:path';\nimport * as log4js from 'log4js';\nimport * as ts from 'typescript';\n\nimport { JsiiDiagnostic } from './jsii-diagnostic';\n\n/**\n * Name of the logger for diagnostics information\n */\nexport const DIAGNOSTICS = 'diagnostics';\n/**\n * Diagnostic code for JSII-generated messages.\n */\nexport const JSII_DIAGNOSTICS_CODE = 9999;\n\n/**\n * Obtains the relevant logger to be used for a given diagnostic message.\n *\n * @param logger     the ``log4js.Logger`` to use for emitting the message.\n * @param diagnostic the message for which a logger is requested.\n *\n * @returns a logger method of the ``logger`` for the appropriate level.\n */\nexport function diagnosticsLogger(\n  logger: log4js.Logger,\n  diagnostic: ts.Diagnostic,\n): ((message: any, ...args: any[]) => void) | undefined {\n  switch (diagnostic.category) {\n    case ts.DiagnosticCategory.Error:\n      if (!logger.isErrorEnabled()) {\n        return undefined;\n      }\n      return logger.error.bind(logger);\n    case ts.DiagnosticCategory.Warning:\n      if (!logger.isWarnEnabled()) {\n        return undefined;\n      }\n      return logger.warn.bind(logger);\n    case ts.DiagnosticCategory.Message:\n      if (!logger.isDebugEnabled()) {\n        return undefined;\n      }\n      return logger.debug.bind(logger);\n    case ts.DiagnosticCategory.Suggestion:\n    default:\n      if (!logger.isTraceEnabled()) {\n        return undefined;\n      }\n      return logger.trace.bind(logger);\n  }\n}\n\n/**\n * Formats a diagnostic message with color and context, if possible.\n *\n * @param diagnostic  the diagnostic message ot be formatted.\n * @param projectRoot the root of the TypeScript project.\n *\n * @returns a formatted string.\n */\nexport function formatDiagnostic(diagnostic: ts.Diagnostic, projectRoot: string) {\n  if (JsiiDiagnostic.isJsiiDiagnostic(diagnostic)) {\n    // Ensure we leverage pre-rendered diagnostics where available.\n    return diagnostic.format(projectRoot);\n  }\n  return _formatDiagnostic(diagnostic, projectRoot);\n}\n\n/**\n * Formats a diagnostic message with color and context, if possible. Users\n * should use `formatDiagnostic` instead, as this implementation is intended for\n * internal usafe only.\n *\n * @param diagnostic  the diagnostic message ot be formatted.\n * @param projectRoot the root of the TypeScript project.\n *\n * @returns a formatted string.\n */\nexport function _formatDiagnostic(diagnostic: ts.Diagnostic, projectRoot: string) {\n  const formatDiagnosticsHost: ts.FormatDiagnosticsHost = {\n    getCurrentDirectory: () => projectRoot,\n    getCanonicalFileName: (fileName) => fileName,\n    getNewLine: () => ts.sys.newLine,\n  };\n\n  const message =\n    diagnostic.file != null\n      ? ts.formatDiagnosticsWithColorAndContext([diagnostic], formatDiagnosticsHost)\n      : ts.formatDiagnostic(diagnostic, formatDiagnosticsHost);\n\n  if (!JsiiDiagnostic.isJsiiDiagnostic(diagnostic)) {\n    return message;\n  }\n\n  // This is our own diagnostics, so we'll format appropriately (replacing TS#### with JSII####).\n  return message.replace(` TS${JSII_DIAGNOSTICS_CODE}: `, ` JSII${diagnostic.jsiiCode}: `);\n}\n\nexport function logDiagnostic(diagnostic: ts.Diagnostic, projectRoot: string) {\n  const logFunc = diagnosticsLogger(log4js.getLogger(DIAGNOSTICS), diagnostic);\n  if (!logFunc) {\n    return;\n  }\n  logFunc(formatDiagnostic(diagnostic, projectRoot).trim());\n}\n\nconst PERSON_REGEX = /^\\s*(.+?)(?:\\s*<([^>]+)>)?(?:\\s*\\(([^)]+)\\))?\\s*$/;\n/**\n * Parses a string-formatted person entry from `package.json`.\n * @param value the string-formatted person entry.\n *\n * @example\n *  parsePerson(\"Barney Rubble <b@rubble.com> (http://barnyrubble.tumblr.com/)\");\n *  // => { name: \"Barney Rubble\", email: \"b@rubble.com\", url: \"http://barnyrubble.tumblr.com/\" }\n */\nexport function parsePerson(value: string) {\n  const match = PERSON_REGEX.exec(value);\n  if (!match) {\n    throw new Error(`Invalid stringified \"person\" value: ${value}`);\n  }\n  const [, name, email, url] = match;\n  const result: { name: string; email?: string; url?: string } = {\n    name: name.trim(),\n  };\n  if (email) {\n    result.email = email.trim();\n  }\n  if (url) {\n    result.url = url.trim();\n  }\n  return result;\n}\n\nconst REPOSITORY_REGEX = /^(?:(github|gist|bitbucket|gitlab):)?([A-Za-z\\d_-]+\\/[A-Za-z\\d_-]+)$/;\nexport function parseRepository(value: string): { url: string } {\n  const match = REPOSITORY_REGEX.exec(value);\n  if (!match) {\n    return { url: value };\n  }\n  const [, host, slug] = match;\n  switch (host ?? 'github') {\n    case 'github':\n      return { url: `https://github.com/${slug}.git` };\n    case 'gist':\n      return { url: `https://gist.github.com/${slug}.git` };\n    case 'bitbucket':\n      return { url: `https://bitbucket.org/${slug}.git` };\n    case 'gitlab':\n      return { url: `https://gitlab.com/${slug}.git` };\n    default:\n      throw new Error(`Unknown host service: ${host}`);\n  }\n}\n\n/**\n * Find the directory that contains a given dependency, identified by its 'package.json', from a starting search directory\n *\n * (This code is duplicated among jsii/jsii-pacmak/jsii-reflect. Changes should be done in all\n * 3 locations, and we should unify these at some point: https://github.com/aws/jsii/issues/3236)\n */\nexport function findDependencyDirectory(dependencyName: string, searchStart: string) {\n  // Explicitly do not use 'require(\"dep/package.json\")' because that will fail if the\n  // package does not export that particular file.\n  const entryPoint = require.resolve(dependencyName, {\n    paths: [searchStart],\n  });\n\n  // Search up from the given directory, looking for a package.json that matches\n  // the dependency name (so we don't accidentally find stray 'package.jsons').\n  const depPkgJsonPath = findPackageJsonUp(dependencyName, path.dirname(entryPoint));\n\n  if (!depPkgJsonPath) {\n    throw new Error(`Could not find dependency '${dependencyName}' from '${searchStart}'`);\n  }\n\n  return depPkgJsonPath;\n}\n\n/**\n * Find the package.json for a given package upwards from the given directory\n *\n * (This code is duplicated among jsii/jsii-pacmak/jsii-reflect. Changes should be done in all\n * 3 locations, and we should unify these at some point: https://github.com/aws/jsii/issues/3236)\n */\nexport function findPackageJsonUp(packageName: string, directory: string) {\n  return findUp(directory, (dir) => {\n    const pjFile = path.join(dir, 'package.json');\n    return fs.existsSync(pjFile) && JSON.parse(fs.readFileSync(pjFile, 'utf-8')).name === packageName;\n  });\n}\n\n/**\n * Find a directory up the tree from a starting directory matching a condition\n *\n * Will return `undefined` if no directory matches\n *\n * (This code is duplicated among jsii/jsii-pacmak/jsii-reflect. Changes should be done in all\n * 3 locations, and we should unify these at some point: https://github.com/aws/jsii/issues/3236)\n */\nexport function findUp(directory: string, pred: (dir: string) => boolean): string | undefined {\n  const result = pred(directory);\n\n  if (result) {\n    return directory;\n  }\n\n  const parent = path.dirname(directory);\n  if (parent === directory) {\n    return undefined;\n  }\n\n  return findUp(parent, pred);\n}\n\nconst ANSI_REGEX =\n  // eslint-disable-next-line no-control-regex\n  /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n\nexport function stripAnsi(x: string): string {\n  return x.replace(ANSI_REGEX, '');\n}\n\n/**\n * Maps the provided type to stip all `readonly` modifiers from its properties.\n */\nexport type Mutable<T> = { -readonly [K in keyof T]: Mutable<T[K]> };\n"]}