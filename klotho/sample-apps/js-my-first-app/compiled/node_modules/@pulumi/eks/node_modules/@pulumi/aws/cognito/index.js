"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./getUserPoolClient"), exports);
__exportStar(require("./getUserPoolClients"), exports);
__exportStar(require("./getUserPoolSigningCertificate"), exports);
__exportStar(require("./getUserPools"), exports);
__exportStar(require("./identityPool"), exports);
__exportStar(require("./identityPoolProviderPrincipalTag"), exports);
__exportStar(require("./identityPoolRoleAttachment"), exports);
__exportStar(require("./identityProvider"), exports);
__exportStar(require("./resourceServer"), exports);
__exportStar(require("./riskConfiguration"), exports);
__exportStar(require("./user"), exports);
__exportStar(require("./userGroup"), exports);
__exportStar(require("./userInGroup"), exports);
__exportStar(require("./userPool"), exports);
__exportStar(require("./userPoolClient"), exports);
__exportStar(require("./userPoolDomain"), exports);
__exportStar(require("./userPoolUICustomization"), exports);
// Import resources to register:
const identityPool_1 = require("./identityPool");
const identityPoolProviderPrincipalTag_1 = require("./identityPoolProviderPrincipalTag");
const identityPoolRoleAttachment_1 = require("./identityPoolRoleAttachment");
const identityProvider_1 = require("./identityProvider");
const resourceServer_1 = require("./resourceServer");
const riskConfiguration_1 = require("./riskConfiguration");
const user_1 = require("./user");
const userGroup_1 = require("./userGroup");
const userInGroup_1 = require("./userInGroup");
const userPool_1 = require("./userPool");
const userPoolClient_1 = require("./userPoolClient");
const userPoolDomain_1 = require("./userPoolDomain");
const userPoolUICustomization_1 = require("./userPoolUICustomization");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:cognito/identityPool:IdentityPool":
                return new identityPool_1.IdentityPool(name, undefined, { urn });
            case "aws:cognito/identityPoolProviderPrincipalTag:IdentityPoolProviderPrincipalTag":
                return new identityPoolProviderPrincipalTag_1.IdentityPoolProviderPrincipalTag(name, undefined, { urn });
            case "aws:cognito/identityPoolRoleAttachment:IdentityPoolRoleAttachment":
                return new identityPoolRoleAttachment_1.IdentityPoolRoleAttachment(name, undefined, { urn });
            case "aws:cognito/identityProvider:IdentityProvider":
                return new identityProvider_1.IdentityProvider(name, undefined, { urn });
            case "aws:cognito/resourceServer:ResourceServer":
                return new resourceServer_1.ResourceServer(name, undefined, { urn });
            case "aws:cognito/riskConfiguration:RiskConfiguration":
                return new riskConfiguration_1.RiskConfiguration(name, undefined, { urn });
            case "aws:cognito/user:User":
                return new user_1.User(name, undefined, { urn });
            case "aws:cognito/userGroup:UserGroup":
                return new userGroup_1.UserGroup(name, undefined, { urn });
            case "aws:cognito/userInGroup:UserInGroup":
                return new userInGroup_1.UserInGroup(name, undefined, { urn });
            case "aws:cognito/userPool:UserPool":
                return new userPool_1.UserPool(name, undefined, { urn });
            case "aws:cognito/userPoolClient:UserPoolClient":
                return new userPoolClient_1.UserPoolClient(name, undefined, { urn });
            case "aws:cognito/userPoolDomain:UserPoolDomain":
                return new userPoolDomain_1.UserPoolDomain(name, undefined, { urn });
            case "aws:cognito/userPoolUICustomization:UserPoolUICustomization":
                return new userPoolUICustomization_1.UserPoolUICustomization(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "cognito/identityPool", _module);
pulumi.runtime.registerResourceModule("aws", "cognito/identityPoolProviderPrincipalTag", _module);
pulumi.runtime.registerResourceModule("aws", "cognito/identityPoolRoleAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "cognito/identityProvider", _module);
pulumi.runtime.registerResourceModule("aws", "cognito/resourceServer", _module);
pulumi.runtime.registerResourceModule("aws", "cognito/riskConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "cognito/user", _module);
pulumi.runtime.registerResourceModule("aws", "cognito/userGroup", _module);
pulumi.runtime.registerResourceModule("aws", "cognito/userInGroup", _module);
pulumi.runtime.registerResourceModule("aws", "cognito/userPool", _module);
pulumi.runtime.registerResourceModule("aws", "cognito/userPoolClient", _module);
pulumi.runtime.registerResourceModule("aws", "cognito/userPoolDomain", _module);
pulumi.runtime.registerResourceModule("aws", "cognito/userPoolUICustomization", _module);
//# sourceMappingURL=index.js.map