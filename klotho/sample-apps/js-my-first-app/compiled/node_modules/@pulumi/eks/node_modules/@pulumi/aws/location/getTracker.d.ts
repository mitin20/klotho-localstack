import * as pulumi from "@pulumi/pulumi";
/**
 * Retrieve information about a Location Service Tracker.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.location.getTracker({
 *     trackerName: "example",
 * }));
 * ```
 */
export declare function getTracker(args: GetTrackerArgs, opts?: pulumi.InvokeOptions): Promise<GetTrackerResult>;
/**
 * A collection of arguments for invoking getTracker.
 */
export interface GetTrackerArgs {
    /**
     * Key-value map of resource tags for the tracker.
     */
    tags?: {
        [key: string]: string;
    };
    /**
     * The name of the tracker resource.
     */
    trackerName: string;
}
/**
 * A collection of values returned by getTracker.
 */
export interface GetTrackerResult {
    /**
     * The timestamp for when the tracker resource was created in ISO 8601 format.
     */
    readonly createTime: string;
    /**
     * The optional description for the tracker resource.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
     */
    readonly kmsKeyId: string;
    /**
     * The position filtering method of the tracker resource.
     */
    readonly positionFiltering: string;
    /**
     * Key-value map of resource tags for the tracker.
     */
    readonly tags: {
        [key: string]: string;
    };
    /**
     * The Amazon Resource Name (ARN) for the tracker resource. Used when you need to specify a resource across all AWS.
     */
    readonly trackerArn: string;
    readonly trackerName: string;
    /**
     * The timestamp for when the tracker resource was last updated in ISO 8601 format.
     */
    readonly updateTime: string;
}
export declare function getTrackerOutput(args: GetTrackerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTrackerResult>;
/**
 * A collection of arguments for invoking getTracker.
 */
export interface GetTrackerOutputArgs {
    /**
     * Key-value map of resource tags for the tracker.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the tracker resource.
     */
    trackerName: pulumi.Input<string>;
}
