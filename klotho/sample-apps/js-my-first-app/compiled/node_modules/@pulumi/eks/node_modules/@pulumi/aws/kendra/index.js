"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./experience"), exports);
__exportStar(require("./faq"), exports);
__exportStar(require("./getExperience"), exports);
__exportStar(require("./getFaq"), exports);
__exportStar(require("./getIndex"), exports);
__exportStar(require("./getQuerySuggestionsBlockList"), exports);
__exportStar(require("./getThesaurus"), exports);
__exportStar(require("./index_"), exports);
__exportStar(require("./querySuggestionsBlockList"), exports);
__exportStar(require("./thesaurus"), exports);
// Import resources to register:
const experience_1 = require("./experience");
const faq_1 = require("./faq");
const index_1 = require("./index_");
const querySuggestionsBlockList_1 = require("./querySuggestionsBlockList");
const thesaurus_1 = require("./thesaurus");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:kendra/experience:Experience":
                return new experience_1.Experience(name, undefined, { urn });
            case "aws:kendra/faq:Faq":
                return new faq_1.Faq(name, undefined, { urn });
            case "aws:kendra/index:Index":
                return new index_1.Index(name, undefined, { urn });
            case "aws:kendra/querySuggestionsBlockList:QuerySuggestionsBlockList":
                return new querySuggestionsBlockList_1.QuerySuggestionsBlockList(name, undefined, { urn });
            case "aws:kendra/thesaurus:Thesaurus":
                return new thesaurus_1.Thesaurus(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "kendra/experience", _module);
pulumi.runtime.registerResourceModule("aws", "kendra/faq", _module);
pulumi.runtime.registerResourceModule("aws", "kendra/index", _module);
pulumi.runtime.registerResourceModule("aws", "kendra/querySuggestionsBlockList", _module);
pulumi.runtime.registerResourceModule("aws", "kendra/thesaurus", _module);
//# sourceMappingURL=index.js.map