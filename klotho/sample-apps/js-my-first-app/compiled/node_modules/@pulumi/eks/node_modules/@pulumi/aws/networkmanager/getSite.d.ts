import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Retrieve information about a site.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.networkmanager.getSite({
 *     globalNetworkId: _var.global_network_id,
 *     siteId: _var.site_id,
 * });
 * ```
 */
export declare function getSite(args: GetSiteArgs, opts?: pulumi.InvokeOptions): Promise<GetSiteResult>;
/**
 * A collection of arguments for invoking getSite.
 */
export interface GetSiteArgs {
    /**
     * The ID of the Global Network of the site to retrieve.
     */
    globalNetworkId: string;
    /**
     * The id of the specific site to retrieve.
     */
    siteId: string;
    /**
     * Key-value tags for the Site.
     */
    tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getSite.
 */
export interface GetSiteResult {
    /**
     * The ARN of the site.
     */
    readonly arn: string;
    /**
     * The description of the site.
     */
    readonly description: string;
    readonly globalNetworkId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The site location as documented below.
     */
    readonly locations: outputs.networkmanager.GetSiteLocation[];
    readonly siteId: string;
    /**
     * Key-value tags for the Site.
     */
    readonly tags: {
        [key: string]: string;
    };
}
export declare function getSiteOutput(args: GetSiteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSiteResult>;
/**
 * A collection of arguments for invoking getSite.
 */
export interface GetSiteOutputArgs {
    /**
     * The ID of the Global Network of the site to retrieve.
     */
    globalNetworkId: pulumi.Input<string>;
    /**
     * The id of the specific site to retrieve.
     */
    siteId: pulumi.Input<string>;
    /**
     * Key-value tags for the Site.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
