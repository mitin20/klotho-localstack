"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const promises_1 = __importDefault(require("fs/promises"));
const mockConfigFiles_1 = require("../../test/mockConfigFiles");
const config_1 = require("./config");
describe('getOptionsFromConfigFiles', () => {
    let res;
    beforeEach(async () => {
        jest.spyOn(promises_1.default, 'writeFile').mockResolvedValueOnce(undefined);
        jest.spyOn(promises_1.default, 'chmod').mockResolvedValue();
        (0, mockConfigFiles_1.mockConfigFiles)({
            globalConfig: { accessToken: 'abc', editor: 'vim' },
            projectConfig: { repoName: 'kibana', repoOwner: 'elastic' },
        });
        res = await (0, config_1.getOptionsFromConfigFiles)({
            optionsFromCliArgs: {},
            optionsFromModule: {},
        });
    });
    it('should return values from config files', () => {
        expect(res).toEqual({
            accessToken: 'abc',
            editor: 'vim',
            repoName: 'kibana',
            repoOwner: 'elastic',
        });
    });
});
