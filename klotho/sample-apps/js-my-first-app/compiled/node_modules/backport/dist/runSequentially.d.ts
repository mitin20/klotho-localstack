import { BackportError } from './lib/BackportError';
import { Commit } from './lib/sourceCommit/parseSourceCommit';
import { ValidConfigOptions } from './options/options';
export declare type SuccessResult = {
    status: 'success';
    didUpdate: boolean;
    targetBranch: string;
    pullRequestUrl: string;
    pullRequestNumber: number;
};
export declare type HandledErrorResult = {
    status: 'handled-error';
    targetBranch: string;
    error: BackportError;
};
export declare type UnhandledErrorResult = {
    status: 'unhandled-error';
    targetBranch: string;
    error: Error;
};
export declare type Result = SuccessResult | HandledErrorResult | UnhandledErrorResult;
export declare function runSequentially({ options, commits, targetBranches, }: {
    options: ValidConfigOptions;
    commits: Commit[];
    targetBranches: string[];
}): Promise<Result[]>;
