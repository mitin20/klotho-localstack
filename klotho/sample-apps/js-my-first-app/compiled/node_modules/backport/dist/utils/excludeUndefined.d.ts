import { Assign } from 'utility-types';
declare type ExcludeUndefined<T extends Record<string, any>> = Assign<T, Partial<Pick<T, {
    [key in keyof T]-?: undefined extends T[key] ? key : never;
}[keyof T]>>>;
export declare function excludeUndefined<T extends Record<string, any>>(obj: T): ExcludeUndefined<T>;
export {};
